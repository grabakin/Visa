// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VisaBack.Data;

#nullable disable

namespace VisaBack.Migrations
{
    [DbContext(typeof(VisaDbContext))]
    [Migration("20250523135717_addedNotes")]
    partial class addedNotes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("VisaBack.Models.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("client_id");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("birth_date");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("FormattedId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("formatted_id");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("full_name");

                    b.Property<string>("PassportData")
                        .HasColumnType("TEXT")
                        .HasColumnName("passport_data");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT")
                        .HasColumnName("phone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormattedId = "",
                            FullName = "Арбуз",
                            Phone = "89166424370",
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormattedId = "",
                            FullName = "Банан",
                            Phone = "89156321",
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("VisaBack.Models.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("document_id");

                    b.Property<int?>("ClientId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("client_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<byte[]>("DocFile")
                        .HasColumnType("BLOB")
                        .HasColumnName("doc_file");

                    b.Property<string>("DocType")
                        .HasColumnType("TEXT")
                        .HasColumnName("doc_type");

                    b.Property<string>("FormattedId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("formatted_id");

                    b.Property<int?>("OrderId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("order_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("OrderId");

                    b.ToTable("documents");
                });

            modelBuilder.Entity("VisaBack.Models.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("log_id");

                    b.Property<string>("ChangedData")
                        .HasColumnType("TEXT")
                        .HasColumnName("changed_data");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("event_type");

                    b.Property<int?>("RecordId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("record_id");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("table_name");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("logs");
                });

            modelBuilder.Entity("VisaBack.Models.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("order_id");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("client_id");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("cost");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("TEXT")
                        .HasColumnName("deadline");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("FormattedId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("formatted_id");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("order_date");

                    b.Property<int>("ServiceId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("service_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.Property<int>("WorkerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("WorkerId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("VisaBack.Models.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("service_id");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("FormattedId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("formatted_id");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<int?>("StandardDuration")
                        .HasColumnType("INTEGER")
                        .HasColumnName("standard_duration");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.Property<string>("VisaType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("visa_type");

                    b.HasKey("Id");

                    b.ToTable("services");
                });

            modelBuilder.Entity("VisaBack.Models.Entities.ServicePriceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("price_history_id");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("changed_at");

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("new_price");

                    b.Property<decimal?>("OldPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("old_price");

                    b.Property<int>("ServiceId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("service_id");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("service_price_history");
                });

            modelBuilder.Entity("VisaBack.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("FormattedId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("formatted_id");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("password_hash");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Desctiption")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FormattedId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("VisaBack.Models.Entities.Document", b =>
                {
                    b.HasOne("VisaBack.Models.Entities.Client", "Client")
                        .WithMany("Documents")
                        .HasForeignKey("ClientId");

                    b.HasOne("VisaBack.Models.Entities.Order", "Order")
                        .WithMany("Documents")
                        .HasForeignKey("OrderId");

                    b.Navigation("Client");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("VisaBack.Models.Entities.Log", b =>
                {
                    b.HasOne("VisaBack.Models.Entities.User", "User")
                        .WithMany("Logs")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VisaBack.Models.Entities.Order", b =>
                {
                    b.HasOne("VisaBack.Models.Entities.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisaBack.Models.Entities.Service", "Service")
                        .WithMany("Orders")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Worker", "Worker")
                        .WithMany("Orders")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Service");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("VisaBack.Models.Entities.ServicePriceHistory", b =>
                {
                    b.HasOne("VisaBack.Models.Entities.Service", "Service")
                        .WithMany("PriceHistory")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("VisaBack.Models.Entities.Client", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("VisaBack.Models.Entities.Order", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("VisaBack.Models.Entities.Service", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("PriceHistory");
                });

            modelBuilder.Entity("VisaBack.Models.Entities.User", b =>
                {
                    b.Navigation("Logs");
                });

            modelBuilder.Entity("Worker", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
